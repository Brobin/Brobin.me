{"version":3,"sources":["components/Footer.tsx","utils/api.ts","components/Link.tsx","components/Blog/PostLink.tsx","utils/hooks.ts","components/Blog/BlogSidebar.tsx","components/Blog/BlogContainer.tsx","components/Blog/PostPage.tsx","components/Blog/PostPreview.tsx","utils/index.ts","components/Blog/BlogPage.tsx","components/Cookbook/RecipePreview.tsx","components/Cookbook/CookbookPage.tsx","components/Cookbook/RecipePage.tsx","components/Fishing/StatsPage.tsx","components/Error/Error.tsx","components/Error/ErrorBoundary.tsx","components/Routes.tsx","components/NavBar.tsx","components/Theme.tsx","components/App.tsx","serviceWorker.js","index.tsx"],"names":["useStyles","makeStyles","theme","footer","width","color","palette","grey","A100","backgroundColor","primary","main","padding","spacing","marginTop","icon","paddingRight","float","Footer","classes","Box","component","className","Container","Grid","container","item","sm","Typography","variant","dayjs","format","style","href","baseUrl","window","location","origin","get","route","a","requestOptions","url","method","headers","request","response","JSON","parse","listPosts","params","category","page","year","query","Link","props","to","RouterLink","children","PostLink","post","date","created","slug","title","useLoader","loadFunction","history","useHistory","useState","loaded","setLoaded","loading","setLoading","load","useCallback","replace","pathname","errorStatusCode","statusCode","useEffect","YearBadge","withStyles","createStyles","badge","right","top","border","background","paper","Badge","card","margin","marginLeft","BlogSidebar","recentPosts","setRecentPosts","categories","setCategories","archiveYears","setArchiveYears","data","recent","archive","Card","CardContent","map","key","id","index","badgeContent","posts","BlogContainer","marginRight","hr","borderBottom","PostPage","match","setPost","month","thisPost","postContent","document","getElementById","innerHTML","content","addScript","createElement","setAttribute","body","appendChild","PostPreview","preview","startCase","str","toUpperCase","heading","BaseBlogPage","setPosts","count","setCount","setPage","loadBlogPosts","api","results","Math","ceil","_index","direction","alignItems","justify","xs","Pagination","onChange","_event","newPage","LinearProgress","BlogArchivePage","BlogCategoryPage","BlogSearchPage","URLSearchParams","search","undefined","BlogPage","RecipePreview","recipe","notes","CookbookPage","recipes","setRecipes","RecipePage","setRecipe","thisRecipe","ingredients","ingredientAmount","ingredient","name","amount","steps","step","text","StatsPage","graphs","setGraphs","textAlign","dangerouslySetInnerHTML","__html","bar","line","punchcard","scatter","Error","code","message","Error400","Error401","Error403","Error404","Error500","ErrorBoundary","useLocation","state","Routes","exact","path","render","flexGrow","position","borderRadius","shape","fade","common","white","breakpoints","up","searchIcon","height","pointerEvents","display","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","NavBar","AppBar","Toolbar","textDecoration","action","InputBase","placeholder","root","input","inputProps","Button","createMuiTheme","secondary","Theme","ThemeProvider","App","CssBaseline","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"4qBAgBMA,EAAYC,aAAW,SAACC,GAAD,MAAmB,CAC9CC,OAAQ,CACNC,MAAO,OACPC,MAAOH,EAAMI,QAAQC,KAAKC,KAC1BC,gBAAiBP,EAAMI,QAAQI,QAAQC,KACvCC,QAASV,EAAMW,QAAQ,GACvBC,UAAWZ,EAAMW,QAAQ,IAE3BE,KAAM,CACJV,MAAOH,EAAMI,QAAQC,KAAKC,KAC1BQ,aAAc,OACdC,MAAO,aA4CIC,EAxCU,WACvB,IAAMC,EAAUnB,IAChB,OACE,kBAACoB,EAAA,EAAD,CAAKC,UAAU,MAAMC,UAAWH,EAAQhB,QACtC,kBAACoB,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAACC,EAAA,EAAD,CAAYC,QAAQ,WAApB,aACeC,MAAQC,OAAO,QAD9B,iBAIF,kBAACP,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAGK,MAAO,CAAEf,MAAO,UAChC,kBAAC,IAAD,CACEgB,KAAK,sDACLX,UAAWH,EAAQJ,MAEnB,kBAAC,IAAD,OAEF,kBAAC,IAAD,CACEkB,KAAK,uCACLX,UAAWH,EAAQJ,MAEnB,kBAAC,IAAD,OAEF,kBAAC,IAAD,CACEkB,KAAK,kCACLX,UAAWH,EAAQJ,MAEnB,kBAAC,IAAD,OAEF,kBAAC,IAAD,CAAMkB,KAAK,4BAA4BX,UAAWH,EAAQJ,MACxD,kBAAC,IAAD,Y,sGC5CRmB,EACJ,UACOC,OAAOC,SAASC,OADvB,QAKIC,EAAG,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,6DACJC,EAAiB,CACrBC,IAAI,GAAD,OAAKR,GAAL,OAAeK,GAClBI,OAAQ,MACRC,QAAS,CAAE,eAAgB,qBAJnB,SAMaC,IAAQJ,GANrB,cAMJK,EANI,yBAOHC,KAAKC,MAAMF,IAPR,2CAAH,sDAUIG,EAAS,uCAAG,WACvBC,GADuB,SAAAV,EAAA,0DAGnBU,EAAOC,SAHY,yCAIdb,EAAI,SAAD,OAAUY,EAAOC,SAAjB,kBAAmCD,EAAOE,QAJ/B,WAMnBF,EAAOG,KANY,yCAOdf,EAAI,iBAAD,OAAkBY,EAAOG,KAAzB,OAPW,WASnBH,EAAOI,MATY,yCAUdhB,EAAI,qBAAD,OAAsBY,EAAOE,KAA7B,kBAA2CF,EAAOI,SAVvC,gCAYhBhB,EAAI,eAAD,OAAgBY,EAAOE,QAZV,2CAAH,sDCnBPG,EANmB,SAACC,GAAD,OAChC,kBAAC,IAAD,CAASnD,MAAM,YAAYoD,GAAID,EAAMC,GAAIpC,UAAWqC,KACjDF,EAAMG,WCSIC,EAX2B,SAACJ,GACzC,IAAMK,EAAOL,EAAMK,KACbC,EAAOhC,IAAM+B,EAAKE,SAExB,OACE,kBAAC,EAAD,CAAMN,GAAE,gBAAWK,EAAK/B,OAAO,WAAvB,YAAqC8B,EAAKG,OAC/CH,EAAKI,QCCCC,EAAY,SAACC,GACxB,IAAMC,EAAUC,cAD8C,EAQlCC,oBAAkB,GARgB,mBAQvDC,EARuD,KAQ/CC,EAR+C,OAShCF,oBAAkB,GATc,mBASvDG,EATuD,KAS9CC,EAT8C,KAWxDC,EAAOC,sBAAW,sBAAC,sBAAApC,EAAA,sEAErBkC,GAAW,GAFU,SAGfP,IAHe,OAIrBK,GAAU,GACVE,GAAW,GALU,gDAOrBN,EAAQS,QAAQT,EAAQhC,SAAS0C,SAAU,CACzCC,gBAAiB,KAAIC,YAAc,MARhB,yDAWtB,CAACb,EAAcC,IAUlB,OARAa,qBAAU,WAGHV,GAAWE,GACdE,MAED,CAACJ,EAAQE,EAASE,IAEd,CAAEJ,SAAQC,YAAWC,UAASC,eC1BjCQ,EAAYC,aAAW,SAACjF,GAAD,OAC3BkF,YAAa,CACXC,MAAO,CACLC,OAAQ,GACRC,IAAK,GACLC,OAAO,aAAD,OAAetF,EAAMI,QAAQmF,WAAWC,OAC9C9E,QAAS,aANGuE,CAShBQ,KAEI3F,EAAYC,aAAW,SAACC,GAAD,OAC3BkF,YAAa,CACXQ,KAAM,CACJC,OAAQ3F,EAAMW,QAAQ,GACtBiF,WAAY,QAgEHC,EA3De,WAC5B,IAAM5E,EAAUnB,IADkB,EAGIsE,mBAA0B,IAH9B,mBAG3B0B,EAH2B,KAGdC,EAHc,OAIE3B,mBAA8B,IAJhC,mBAI3B4B,EAJ2B,KAIfC,EAJe,OAKM7B,mBAA6B,IALnC,mBAK3B8B,EAL2B,KAKbC,EALa,KAc1B9B,EAAWL,EAPF,uCAAG,4BAAA1B,EAAA,sEJKbF,EAAI,kBILS,OACZgE,EADY,OAElBL,EAAeK,EAAKC,QACpBJ,EAAcG,EAAKJ,YACnBG,EAAgBC,EAAKE,SAJH,2CAAH,sDAOTjC,OAER,OACE,kBAACkC,EAAA,EAAD,CAAMnF,UAAWH,EAAQyE,MACvB,kBAACc,EAAA,EAAD,KACE,kBAAC9E,EAAA,EAAD,CAAYC,QAAQ,MAApB,gBACC0C,GACCyB,EAAYW,KAAI,SAAC9C,GACf,OACE,uBAAG+C,IAAK/C,EAAKgD,IACX,kBAAC,EAAD,CAAUhD,KAAMA,QAIxB,kBAACjC,EAAA,EAAD,CAAYC,QAAQ,MAApB,cACA,2BACG0C,GACC2B,EAAWS,KAAI,SAACxD,EAAU2D,GACxB,OACE,0BAAMF,IAAKzD,EAASa,MACjB8C,EAAQ,EAAI,KAAO,GACpB,kBAAC,EAAD,CAAMrD,GAAE,gBAAWN,EAASa,OAASb,EAASc,YAKxD,kBAACrC,EAAA,EAAD,CAAYC,QAAQ,MAApB,WACC0C,GACC6B,EAAaO,KAAI,SAACtD,GAChB,OACE,yBAAKuD,IAAKvD,EAAKA,MACb,kBAAC,EAAD,CAAMI,GAAE,wBAAmBJ,EAAKA,OAC9B,kBAAC6B,EAAD,CAAW6B,aAAc1D,EAAK2D,MAAO3G,MAAM,WACzC,0BAAMA,MAAM,aAAagD,EAAKA,QAGlC,oCC3ED4D,EAbiB,SAAC,GAAD,IAAGtD,EAAH,EAAGA,SAAH,OAC9B,kBAACpC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,EAACZ,QAAS,GACvB,kBAACW,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACZgC,GAEH,kBAACnC,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAAC,EAAD,UCKF3B,EAAYC,aAAW,SAACC,GAAD,OAC3BkF,YAAa,CACXQ,KAAM,CACJC,OAAQ3F,EAAMW,QAAQ,GACtBqG,YAAa,GAEfC,GAAI,CACF3B,OAAQ,OACR4B,aAAc,uBAkDLC,EA7CuD,SAAC,GAEhE,IADLC,EACI,EADJA,MAEMnG,EAAUnB,IADZ,EAEoBsE,qBAFpB,mBAEGT,EAFH,KAES0D,EAFT,KAuBIhD,EAAWL,EAnBL,uCAAG,gCAAA1B,EAAA,sENcKU,EMbyBoE,EAAMpE,ONc9CZ,EAAI,SAAD,OAAUY,EAAOG,KAAjB,YAAyBH,EAAOsE,MAAhC,YAAyCtE,EAAOc,KAAhD,MMfO,OACTyD,EADS,OAEfF,EAAQE,IAIFC,EAAcC,SAASC,eAAe,kBACzBH,IACjBC,EAAYG,UAAYJ,EAASK,SAE3BC,EAAYJ,SAASK,cAAc,WAC/BC,aACR,MACA,sEAEFN,SAASO,KAAKC,YAAYJ,IAfb,iCNcI,IAAC7E,IMdL,OAAH,sDAmBNqB,OAER,OACE,kBAAC,EAAD,KACE,kBAACkC,EAAA,EAAD,CAAMnF,UAAWH,EAAQyE,MACvB,kBAACc,EAAA,EAAD,KACGnC,GAAUV,GACT,oCACE,kBAACjC,EAAA,EAAD,CAAYC,QAAQ,MAAMgC,EAAKI,OAC/B,2BAAInC,IAAM+B,EAAKE,SAAShC,OAAO,iBAC/B,wBAAIT,UAAWH,EAAQgG,MAG3B,0BAAMN,GAAG,qB,kBClDb7G,EAAYC,aAAW,SAACC,GAAD,OAC3BkF,YAAa,CACXQ,KAAM,CACJC,OAAQ3F,EAAMW,QAAQ,GACtBqG,YAAa,QAsBJkB,GAjBiC,SAAC5E,GAC/C,IAAMrC,EAAUnB,IAChB,OACE,kBAACyG,EAAA,EAAD,CAAMnF,UAAWH,EAAQyE,MACvB,kBAACc,EAAA,EAAD,KACE,kBAAC9E,EAAA,EAAD,CAAYC,QAAQ,MAClB,kBAAC,EAAD,CAAUgC,KAAML,EAAMK,QAExB,kBAACjC,EAAA,EAAD,CAAYC,QAAQ,SACjBC,IAAM0B,EAAMK,KAAKE,SAAShC,OAAO,wBAEpC,kBAACH,EAAA,EAAD,CAAYC,QAAQ,SAAS2B,EAAMK,KAAKwE,YCrCnCC,GAAY,SAACC,GAAD,OACvBA,EACG1D,QAAQ,IAAK,KACbA,QAAQ,wBAAwB,SAACyC,GAAD,OAAWA,EAAMkB,kBCehDxI,GAAYC,aAAW,SAACC,GAAD,OAC3BkF,YAAa,CACXqD,QAAS,CACP5C,OAAQ3F,EAAMW,QAAQ,SAYtB6H,GAAwC,SAAClF,GAC7C,IAAMrC,EAAUnB,KACVsD,EAAQE,EAAMF,MACdD,EAAOG,EAAMH,KACbF,EAAWK,EAAML,SAJgC,EAM7BmB,mBAA0B,IANG,mBAMhD0C,EANgD,KAMzC2B,EANyC,OAO7BrE,qBAP6B,mBAOhDsE,EAPgD,KAOzCC,EAPyC,OAQ/BvE,mBAAiB,GARc,mBAQhDlB,EARgD,KAQ1C0F,EAR0C,KAUjDC,EAAgBnE,sBAAW,sBAAC,4BAAApC,EAAA,sEACSwG,EAAc,CACrD5F,OACAE,QACAD,OACAF,aAL8B,OAC1BmD,EAD0B,OAOhCqC,EAASrC,EAAK2C,SACdJ,EAASK,KAAKC,KAAK7C,EAAKsC,MAAQ,KARA,2CAS/B,CAACxF,EAAME,EAAOD,EAAMF,IAnBgC,EAqBzBe,EAAU6E,GAAhCxE,EArB+C,EAqB/CA,OAAQC,EArBuC,EAqBvCA,UAEhB,OAAQD,EAGN,kBAAC,EAAD,KACGf,EAAMiF,SACL,kBAAC7G,EAAA,EAAD,CAAYC,QAAQ,KAAKP,UAAWH,EAAQsH,SACzCjF,EAAMiF,SAGVzB,EAAML,KAAI,SAAC9C,EAAMuF,GAChB,OAAO,kBAAC,GAAD,CAAaxC,IAAK/C,EAAKgD,GAAIhD,KAAMA,OAG1C,kBAACrC,EAAA,EAAD,CACEC,WAAS,EACTZ,QAAS,EACTwI,UAAU,SACVC,WAAW,SACXC,QAAQ,UAER,kBAAC/H,EAAA,EAAD,CAAME,MAAI,EAAC8H,GAAI,IACb,kBAACC,EAAA,EAAD,CACEb,MAAOA,EACPxF,KAAMA,EACNsG,SAAU,SAACC,EAAQC,GACjBd,EAAQc,GACRpF,GAAU,SAzBpB,kBAACqF,EAAA,EAAD,CAAgBxJ,MAAM,eAkCpByJ,GAAmE,SAAC,GAEnE,IACCzG,EADF,EADJiE,MAEmBpE,OAAOG,KAC1B,OAAO,kBAAC,GAAD,CAAcA,KAAMA,EAAMuD,IAAKvD,EAAMoF,QAAO,qBAAgBpF,MAG/D0G,GAAwE,SAAC,GAExE,IACC5G,EADF,EADJmE,MAEuBpE,OAAOC,SAC9B,OACE,kBAAC,GAAD,CACEA,SAAUA,EACVyD,IAAKzD,EACLsF,QAAO,mBAAcH,GAAUnF,OAK/B6G,GAA2B,WAC/B,IAAM1G,EAAQ,IAAI2G,gBAAgB9H,OAAOC,SAAS8H,QAAQ5H,IAAI,KAC9D,OACE,kBAAC,GAAD,CACEgB,MAAOA,QAAS6G,EAChBvD,IAAKtD,EACLmF,QAAO,8BAAyBnF,EAAzB,QAOE8G,GAFY,kBAAM,kBAAC,GAAD,CAAcxD,IAAI,UC1G7C5G,GAAYC,aAAW,SAACC,GAAD,OAC3BkF,YAAa,CACXQ,KAAM,CACJC,OAAQ3F,EAAMW,QAAQ,GACtBqG,YAAa,QAmBJmD,GAdqC,SAAC7G,GACnD,IAAMrC,EAAUnB,KAChB,OACE,kBAACyG,EAAA,EAAD,CAAMnF,UAAWH,EAAQyE,MACvB,kBAACc,EAAA,EAAD,KACE,kBAAC9E,EAAA,EAAD,CAAYC,QAAQ,MAClB,kBAAC,EAAD,CAAM4B,GAAE,kBAAaD,EAAM8G,OAAOtG,OAASR,EAAM8G,OAAOrG,QAE1D,2BAAIT,EAAM8G,OAAOC,UCDVC,GAzBgB,WAAO,IAAD,EACLlG,mBAAwB,IADnB,mBAC5BmG,EAD4B,KACnBC,EADmB,KAUnC,OAFmBxG,EALF,uCAAG,4BAAA1B,EAAA,sEXgDbF,EAAI,cWhDS,OACZgE,EADY,OAElBoE,EAAWpE,EAAK2C,SAFE,2CAAH,sDAKT1E,OAKN,kBAAChD,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACZ8I,EAAQ9D,KAAI,SAAC2D,GACZ,OAAO,kBAAC,GAAD,CAAeA,OAAQA,UANtC,kBAACT,EAAA,EAAD,CAAgBxJ,MAAM,eCDpBL,GAAYC,aAAW,SAACC,GAAD,OAC3BkF,YAAa,CACX3D,UAAW,CACTb,QAASV,EAAMW,QAAQ,SAyDd8J,GApDuD,SAAC,GAEhE,IACC3G,EADF,EADJsD,MAEmBpE,OAAOc,KACpB7C,EAAUnB,KAFZ,EAIwBsE,qBAJxB,mBAIGgG,EAJH,KAIWM,EAJX,KAaJ,OAFmB1G,EALH,uCAAG,4BAAA1B,EAAA,sEZ6BZF,EAAI,aAAD,OY5B+B,CAAE0B,QZ4BZA,OY7BZ,OACX6G,EADW,OAEjBD,EAAUC,GAFO,2CAAH,sDAKRtG,QAEW+F,EAGjB,kBAAC/I,EAAA,EAAD,KACE,yBAAKD,UAAWH,EAAQM,WACtB,kBAACG,EAAA,EAAD,CAAYC,QAAQ,MAAMyI,EAAOrG,OACjC,2BAAIqG,EAAOC,OACX,kBAAC/I,EAAA,EAAD,CAAMC,WAAS,GACb,kBAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,kBAAC8E,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACE,4BACG4D,EAAOQ,YAAYnE,KAAI,SAACoE,GACvB,OACE,4BACGA,EAAiBC,WAAWC,KAAM,IAClCF,EAAiBG,eAQhC,kBAAC1J,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,GACb,4BACG2I,EAAOa,MAAMxE,KAAI,SAACyE,GACjB,OAAO,4BAAKA,EAAKC,cA1B7B,kBAACxB,EAAA,EAAD,CAAgBxJ,MAAM,eCWXiL,GA7Ca,WAAO,IAAD,EACJhH,qBADI,mBACzBiH,EADyB,KACjBC,EADiB,KAQxBjH,EAAWL,EALJ,uCAAG,4BAAA1B,EAAA,sEbwDXF,EAAI,aaxDO,OACVgE,EADU,OAEhBkF,EAAUlF,GAFM,2CAAH,sDAKP/B,OAER,OACE,kBAAChD,EAAA,EAAD,KACE,kBAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKG,MAAO,CAAEyJ,UAAW,WAA7C,6BAGA,oCACGlH,GAAUgH,GACT,oCACE,4BACEG,wBAAyB,CACvBC,OAAQJ,EAAOK,OAGnB,4BACEF,wBAAyB,CACvBC,OAAQJ,EAAOM,QAGnB,4BACEH,wBAAyB,CACvBC,OAAQJ,EAAOO,aAGnB,4BACEJ,wBAAyB,CACvBC,OAAQJ,EAAOQ,e,qBClCzBC,GAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAAT,OAClC,kBAAC3K,EAAA,EAAD,KACE,kBAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKG,MAAO,CAAEyJ,UAAW,WAC1CQ,GAEH,kBAACrK,EAAA,EAAD,CAAYC,QAAQ,KAAKG,MAAO,CAAEyJ,UAAW,WAC1CS,KAKMC,GAAqB,kBAChC,kBAAC,GAAD,CAAOF,KAAM,IAAKC,QAAQ,iBAGfE,GAAqB,kBAChC,kBAAC,GAAD,CAAOH,KAAM,IAAKC,QAAQ,kBAGfG,GAAqB,kBAChC,kBAAC,GAAD,CAAOJ,KAAM,IAAKC,QAAQ,eAGfI,GAAqB,kBAChC,kBAAC,GAAD,CAAOL,KAAM,IAAKC,QAAQ,oBAGfK,GAAqB,kBAChC,kBAAC,GAAD,CAAON,KAAM,IAAKC,QAAQ,2BCZbM,GAnBiB,SAAC,GAAkB,IAAhB7I,EAAe,EAAfA,SAC3BvB,EAAWqK,cAEjB,OAAQnK,KAAIF,EAASsK,MAAO,oBAC1B,KAAK,IACH,OAAO,kBAAC,GAAD,MACT,KAAK,IACH,OAAO,kBAAC,GAAD,MACT,KAAK,IACH,OAAO,kBAAC,GAAD,MACT,KAAK,IACH,OAAO,kBAAC,GAAD,MACT,KAAK,IACH,OAAO,kBAAC,GAAD,MACT,QACE,OAAO,oCAAG/I,KCmBDgJ,GAzBU,WACvB,OACE,kBAAC,GAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,OAAK,EACLC,KAAK,2BACLC,OAAQ,SAACtJ,GACP,OAAO,kBAAC,EAAD,iBAAcA,EAAd,CAAqBoD,IAAKpD,EAAM8D,MAAMpE,OAAOc,WAGxD,kBAAC,IAAD,CAAO4I,OAAK,EAACC,KAAK,sBAAsBxL,UAAWyI,KACnD,kBAAC,IAAD,CAAO8C,OAAK,EAACC,KAAK,eAAexL,UAAW2I,KAC5C,kBAAC,IAAD,CAAO4C,OAAK,EAACC,KAAK,kBAAkBxL,UAAW0I,KAC/C,kBAAC,IAAD,CAAO6C,OAAK,EAACC,KAAK,QAAQxL,UAAW+I,KACrC,kBAAC,IAAD,CAAOwC,OAAK,EAACC,KAAK,YAAYxL,UAAWmJ,KACzC,kBAAC,IAAD,CAAOoC,OAAK,EAACC,KAAK,gBAAgBxL,UAAWsJ,KAC7C,kBAAC,IAAD,CAAOiC,OAAK,EAACC,KAAK,WAAWxL,UAAWiK,KACxC,kBAAC,IAAD,CAAOsB,OAAK,EAACC,KAAK,IAAIxL,UAAW+I,KACjC,kBAAC,IAAD,CAAO/I,UAAWiL,Q,gFCtBpBtM,GAAYC,aAAW,SAACC,GAAD,MAAY,CACvC+D,MAAO,CACL8I,SAAU,GAEZ7C,OAAO,cACL8C,SAAU,WACVC,aAAc/M,EAAMgN,MAAMD,aAC1BxM,gBAAiB0M,aAAKjN,EAAMI,QAAQ8M,OAAOC,MAAO,KAClD,UAAW,CACT5M,gBAAiB0M,aAAKjN,EAAMI,QAAQ8M,OAAOC,MAAO,MAEpDnG,YAAahH,EAAMW,QAAQ,GAC3BiF,WAAY,EACZ1F,MAAO,QACNF,EAAMoN,YAAYC,GAAG,MAAQ,CAC5BzH,WAAY5F,EAAMW,QAAQ,GAC1BT,MAAO,SAGXoN,WAAY,CACV5M,QAASV,EAAMW,QAAQ,EAAG,GAC1B4M,OAAQ,OACRT,SAAU,WACVU,cAAe,OACfC,QAAS,OACTrE,WAAY,SACZsE,eAAgB,UAElBC,UAAW,CACTxN,MAAO,WAETyN,WAAW,cACTlN,QAASV,EAAMW,QAAQ,EAAG,EAAG,EAAG,GAChCkN,YAAY,cAAD,OAAgB7N,EAAMW,QAAQ,GAA9B,OACXmN,WAAY9N,EAAM+N,YAAYC,OAAO,SACrC9N,MAAO,QACNF,EAAMoN,YAAYC,GAAG,MAAQ,CAC5BnN,MAAO,aAsDE+N,GAjDU,WACvB,IAAMhN,EAAUnB,KAEhB,OACE,kBAACoO,GAAA,EAAD,CAAQpB,SAAS,UACf,kBAACzL,EAAA,EAAD,KACE,kBAAC8M,GAAA,EAAD,KACE,kBAACzM,EAAA,EAAD,CACEC,QAAQ,KACRP,UAAWH,EAAQ8C,MACnBR,GAAG,IACHpC,UAAWkC,IACXlD,MAAM,UACN2B,MAAO,CACLsM,eAAgB,SAPpB,UAYA,yBAAKhN,UAAWH,EAAQ+I,QACtB,yBAAK5I,UAAWH,EAAQqM,YACtB,kBAAC,KAAD,OAEF,0BAAM7K,OAAO,MAAM4L,OAAO,gBACxB,kBAACC,GAAA,EAAD,CACEC,YAAY,eACZtN,QAAS,CACPuN,KAAMvN,EAAQ0M,UACdc,MAAOxN,EAAQ2M,YAEjBc,WAAY,CAAE,aAAc,SAAU3D,KAAM,SAIlD,kBAAC4D,GAAA,EAAD,CAAQxO,MAAM,UAAUoD,GAAG,QAAQpC,UAAWkC,KAA9C,QAGA,kBAACsL,GAAA,EAAD,CAAQxO,MAAM,UAAU4B,KAAK,6BAA7B,YAGA,kBAAC4M,GAAA,EAAD,CAAQxO,MAAM,UAAUoD,GAAG,YAAYpC,UAAWkC,KAAlD,gB,oBC1FJrD,GAAQ4O,aAAe,CAC3BxO,QAAS,CACPI,QAAS,CACPC,KAAM,WAERoO,UAAW,CACTpO,KAAM,cASGqO,GAJS,SAAC,GAAkB,IAAhBrL,EAAe,EAAfA,SACzB,OAAO,kBAACsL,GAAA,EAAD,CAAe/O,MAAOA,IAAQyD,ICIxBuL,GAXO,kBACpB,kBAAC,IAAD,KACE,kBAAC,GAAD,KACE,kBAACC,EAAA,EAAD,MACA,kBAAC,GAAD,MACA,kBAAC,GAAD,MACA,kBAAC,EAAD,SCFcC,QACW,cAA7BjN,OAAOC,SAASiN,UAEe,UAA7BlN,OAAOC,SAASiN,UAEhBlN,OAAOC,SAASiN,SAAS/H,MACvB,2D,OCZNgI,IAASxC,OACP,kBAAC,IAAMyC,WAAP,KACE,kBAAC,GAAD,OAEF5H,SAASC,eAAe,SDyHpB,kBAAmB4H,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAM7D,c","file":"static/js/main.df787c50.chunk.js","sourcesContent":["import React from \"react\";\nimport dayjs from \"dayjs\";\nimport {\n  Box,\n  Container,\n  Grid,\n  Link,\n  makeStyles,\n  Theme,\n  Typography,\n} from \"@material-ui/core\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  footer: {\n    width: \"100%\",\n    color: theme.palette.grey.A100,\n    backgroundColor: theme.palette.primary.main,\n    padding: theme.spacing(3),\n    marginTop: theme.spacing(3),\n  },\n  icon: {\n    color: theme.palette.grey.A100,\n    paddingRight: \"10px\",\n    float: \"right\",\n  },\n}));\n\nconst Footer: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <Box component=\"div\" className={classes.footer}>\n      <Container>\n        <Grid container>\n          <Grid item sm={6}>\n            <Typography variant=\"caption\">\n              &copy; 2013-{dayjs().format(\"YYYY\")} Tobin Brown\n            </Typography>\n          </Grid>\n          <Grid item sm={6} style={{ float: \"right\" }}>\n            <Link\n              href=\"https://www.linkedin.com/pub/tobin-brown/91/393/720\"\n              className={classes.icon}\n            >\n              <LinkedInIcon />\n            </Link>\n            <Link\n              href=\"https://www.facebook.com/tobinjbrown\"\n              className={classes.icon}\n            >\n              <FacebookIcon />\n            </Link>\n            <Link\n              href=\"https://twitter.com/RobinWithaT\"\n              className={classes.icon}\n            >\n              <TwitterIcon />\n            </Link>\n            <Link href=\"https://github.com/Brobin\" className={classes.icon}>\n              <GitHubIcon />\n            </Link>\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Footer;\n","import request from \"request-promise-native\";\nimport {\n  BlogPost,\n  BlogPostDetailParams,\n  BlogPostListParams,\n  BlogPostListResponse,\n  BlogSidebarResponse,\n} from \"../types/Blog\";\nimport {\n  Recipe,\n  RecipeListResponse,\n  RecipeDetailParams,\n} from \"../types/Cookbook\";\nimport {\n  FishingStatsResponse,\n  FishingYearStatsResponse,\n} from \"../types/Fishing\";\n\nconst baseUrl =\n  process.env.NODE_ENV === \"production\"\n    ? `${window.location.origin}/api`\n    : \"http://127.0.0.1:8000/api\";\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst get = async (route: string): Promise<any> => {\n  const requestOptions = {\n    url: `${baseUrl}${route}`,\n    method: \"GET\",\n    headers: { \"Content-Type\": \"application/json\" },\n  };\n  const response = await request(requestOptions);\n  return JSON.parse(response);\n};\n\nexport const listPosts = async (\n  params: BlogPostListParams\n): Promise<BlogPostListResponse> => {\n  if (params.category) {\n    return get(`/blog/${params.category}/?page=${params.page}`);\n  }\n  if (params.year) {\n    return get(`/blog/archive/${params.year}/`);\n  }\n  if (params.query) {\n    return get(`/blog/search/?page${params.page}&query=${params.query}`);\n  }\n  return get(`/blog/?page=${params.page}`);\n};\n\nexport const getPost = (params: BlogPostDetailParams): Promise<BlogPost> => {\n  return get(`/blog/${params.year}/${params.month}/${params.slug}/`);\n};\n\nexport const getBlogSidebar = (): Promise<BlogSidebarResponse> => {\n  return get(\"/blog/sidebar/\");\n};\n\nexport const listRecipes = (): Promise<RecipeListResponse> => {\n  return get(`/cookbook/`);\n};\n\nexport const getRecipe = (params: RecipeDetailParams): Promise<Recipe> => {\n  return get(`/cookbook/${params.slug}`);\n};\n\nexport const getFishingStats = (): Promise<FishingStatsResponse> => {\n  return get(`/fishing/`);\n};\n\nexport const getFishingYearStats = (\n  year: number\n): Promise<FishingYearStatsResponse> => {\n  return get(`/fishing/${year}/`);\n};\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Link as MuiLink } from \"@material-ui/core\";\n\ninterface LinkProps {\n  to: string;\n  children: React.ReactNode;\n}\n\nconst Link: React.FC<LinkProps> = (props) => (\n  <MuiLink color=\"secondary\" to={props.to} component={RouterLink}>\n    {props.children}\n  </MuiLink>\n);\n\nexport default Link;\n","import React from \"react\";\nimport dayjs from \"dayjs\";\nimport Link from \"../Link\";\nimport { BlogPost } from \"../../types/Blog\";\n\ninterface PostLinkProps {\n  post: BlogPost;\n}\n\nconst PostLink: React.FC<PostLinkProps> = (props) => {\n  const post = props.post;\n  const date = dayjs(post.created);\n\n  return (\n    <Link to={`/blog/${date.format(\"YYYY/MM\")}/${post.slug}`}>\n      {post.title}\n    </Link>\n  );\n};\n\nexport default PostLink;\n","import {\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface UseLoader {\n  loaded: boolean;\n  setLoaded: Dispatch<SetStateAction<boolean>>;\n  loading: boolean;\n  setLoading: Dispatch<SetStateAction<boolean>>;\n}\n\nexport const useLoader = (loadFunction: Function): UseLoader => {\n  const history = useHistory();\n  /**\n   * useState implementation that takes an async function and tells\n   * you when its running (loading) and complete (loaded). Defaults\n   * to not loaded, so when it is used, it will automatically get\n   * called to load.\n   */\n  const [loaded, setLoaded] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const load = useCallback(async () => {\n    try {\n      setLoading(true);\n      await loadFunction();\n      setLoaded(true);\n      setLoading(false);\n    } catch (err) {\n      history.replace(history.location.pathname, {\n        errorStatusCode: err.statusCode || 500,\n      });\n    }\n  }, [loadFunction, history]);\n\n  useEffect(() => {\n    // Use dual booleans in case the loadFunction takes a long time.\n    // We don't want to double call APIs and whatnot\n    if (!loaded && !loading) {\n      load();\n    }\n  }, [loaded, loading, load]);\n\n  return { loaded, setLoaded, loading, setLoading };\n};\n\nexport default {\n  useLoader,\n};\n","import React, { useState } from \"react\";\nimport {\n  Badge,\n  Card,\n  CardContent,\n  createStyles,\n  makeStyles,\n  Theme,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport {\n  BlogArchive,\n  BlogCategory,\n  BlogPost,\n  BlogSidebarResponse,\n} from \"../../types/Blog\";\nimport * as api from \"../../utils/api\";\nimport PostLink from \"./PostLink\";\nimport Link from \"../Link\";\nimport { useLoader } from \"../../utils/hooks\";\n\nconst YearBadge = withStyles((theme: Theme) =>\n  createStyles({\n    badge: {\n      right: -15,\n      top: 10,\n      border: `2px solid ${theme.palette.background.paper}`,\n      padding: \"0 4px\",\n    },\n  })\n)(Badge);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      margin: theme.spacing(3),\n      marginLeft: 0,\n    },\n  })\n);\n\nconst BlogSidebar: React.FC = () => {\n  const classes = useStyles();\n\n  const [recentPosts, setRecentPosts] = useState<Array<BlogPost>>([]);\n  const [categories, setCategories] = useState<Array<BlogCategory>>([]);\n  const [archiveYears, setArchiveYears] = useState<Array<BlogArchive>>([]);\n\n  const loadSidebar = async (): Promise<void> => {\n    const data: BlogSidebarResponse = await api.getBlogSidebar();\n    setRecentPosts(data.recent);\n    setCategories(data.categories);\n    setArchiveYears(data.archive);\n  };\n\n  const { loaded } = useLoader(loadSidebar);\n\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography variant=\"h6\">Recent Posts</Typography>\n        {loaded &&\n          recentPosts.map((post) => {\n            return (\n              <p key={post.id}>\n                <PostLink post={post} />\n              </p>\n            );\n          })}\n        <Typography variant=\"h6\">Categories</Typography>\n        <p>\n          {loaded &&\n            categories.map((category, index) => {\n              return (\n                <span key={category.slug}>\n                  {index > 0 ? \", \" : \"\"}\n                  <Link to={`/blog/${category.slug}`}>{category.title}</Link>\n                </span>\n              );\n            })}\n        </p>\n        <Typography variant=\"h6\">Archive</Typography>\n        {loaded &&\n          archiveYears.map((year) => {\n            return (\n              <div key={year.year}>\n                <Link to={`/blog/archive/${year.year}`}>\n                  <YearBadge badgeContent={year.posts} color=\"primary\">\n                    <span color=\"secondary\">{year.year}</span>\n                  </YearBadge>\n                </Link>\n                <br />\n              </div>\n            );\n          })}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default BlogSidebar;\n","import React from \"react\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport BlogSidebar from \"./BlogSidebar\";\n\nconst BlogContainer: React.FC = ({ children }) => (\n  <Container>\n    <Grid container spacing={3}>\n      <Grid item sm={8}>\n        {children}\n      </Grid>\n      <Grid item sm={4}>\n        <BlogSidebar />\n      </Grid>\n    </Grid>\n  </Container>\n);\n\nexport default BlogContainer;\n","import React, { useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport {\n  Card,\n  CardContent,\n  createStyles,\n  makeStyles,\n  Theme,\n  Typography,\n} from \"@material-ui/core\";\nimport BlogContainer from \"./BlogContainer\";\nimport { BlogPost, BlogPostDetailParams } from \"../../types/Blog\";\nimport * as api from \"../../utils/api\";\nimport { useLoader } from \"../../utils/hooks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      margin: theme.spacing(3),\n      marginRight: 0,\n    },\n    hr: {\n      border: \"none\",\n      borderBottom: \"1px solid #888\",\n    },\n  })\n);\n\nconst PostPage: React.FC<RouteComponentProps<BlogPostDetailParams>> = ({\n  match,\n}) => {\n  const classes = useStyles();\n  const [post, setPost] = useState<BlogPost>();\n\n  const loadPost = async (): Promise<void> => {\n    const thisPost: BlogPost = await api.getPost(match.params);\n    setPost(thisPost);\n\n    // Yes, this is all quite janky, but we have to do this in\n    // order to run the code prettifier on the blog posts.\n    const postContent = document.getElementById(\"post-content\");\n    if (postContent && thisPost) {\n      postContent.innerHTML = thisPost.content;\n\n      const addScript = document.createElement(\"script\");\n      addScript.setAttribute(\n        \"src\",\n        \"//cdnjs.cloudflare.com/ajax/libs/prettify/r298/run_prettify.min.js\"\n      );\n      document.body.appendChild(addScript);\n    }\n  };\n\n  const { loaded } = useLoader(loadPost);\n\n  return (\n    <BlogContainer>\n      <Card className={classes.card}>\n        <CardContent>\n          {loaded && post && (\n            <>\n              <Typography variant=\"h5\">{post.title}</Typography>\n              <p>{dayjs(post.created).format(\"MMMM D, YYYY\")}</p>\n              <hr className={classes.hr} />\n            </>\n          )}\n          <span id=\"post-content\" />\n        </CardContent>\n      </Card>\n    </BlogContainer>\n  );\n};\n\nexport default PostPage;\n","import React from \"react\";\nimport dayjs from \"dayjs\";\nimport {\n  Card,\n  CardContent,\n  createStyles,\n  makeStyles,\n  Theme,\n  Typography,\n} from \"@material-ui/core\";\nimport { BlogPost } from \"../../types/Blog\";\nimport PostLink from \"./PostLink\";\n\ninterface PostPreviewProps {\n  post: BlogPost;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      margin: theme.spacing(3),\n      marginRight: 0,\n    },\n  })\n);\n\nconst PostPreview: React.FC<PostPreviewProps> = (props) => {\n  const classes = useStyles();\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography variant=\"h6\">\n          <PostLink post={props.post} />\n        </Typography>\n        <Typography variant=\"body1\">\n          {dayjs(props.post.created).format(\"MMMM D, YYYY h:mm A\")}\n        </Typography>\n        <Typography variant=\"body2\">{props.post.preview}</Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default PostPreview;\n","export const startCase = (str: string): string =>\n  str\n    .replace(\"-\", \" \")\n    .replace(/(?:^|\\s|[\"'([{])+\\S/g, (match) => match.toUpperCase());\n\nexport default {\n  startCase,\n};\n","import React, { useCallback, useState } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport {\n  createStyles,\n  Grid,\n  LinearProgress,\n  makeStyles,\n  Theme,\n  Typography,\n} from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport BlogContainer from \"./BlogContainer\";\nimport PostPreview from \"./PostPreview\";\nimport { BlogPostListResponse, BlogPost } from \"../../types/Blog\";\nimport { useLoader } from \"../../utils/hooks\";\nimport * as api from \"../../utils/api\";\nimport { startCase } from \"../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    heading: {\n      margin: theme.spacing(3),\n    },\n  })\n);\n\ntype BlogPageProps = {\n  heading?: string;\n  query?: string;\n  year?: string;\n  category?: string;\n};\n\nconst BaseBlogPage: React.FC<BlogPageProps> = (props) => {\n  const classes = useStyles();\n  const query = props.query;\n  const year = props.year;\n  const category = props.category;\n\n  const [posts, setPosts] = useState<Array<BlogPost>>([]);\n  const [count, setCount] = useState<number>();\n  const [page, setPage] = useState<number>(1);\n\n  const loadBlogPosts = useCallback(async () => {\n    const data: BlogPostListResponse = await api.listPosts({\n      page,\n      query,\n      year,\n      category,\n    });\n    setPosts(data.results);\n    setCount(Math.ceil(data.count / 10));\n  }, [page, query, year, category]);\n\n  const { loaded, setLoaded } = useLoader(loadBlogPosts);\n\n  return !loaded ? (\n    <LinearProgress color=\"secondary\" />\n  ) : (\n    <BlogContainer>\n      {props.heading && (\n        <Typography variant=\"h5\" className={classes.heading}>\n          {props.heading}\n        </Typography>\n      )}\n      {posts.map((post, _index) => {\n        return <PostPreview key={post.id} post={post} />;\n      })}\n\n      <Grid\n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n      >\n        <Grid item xs={12}>\n          <Pagination\n            count={count}\n            page={page}\n            onChange={(_event, newPage: number): void => {\n              setPage(newPage);\n              setLoaded(false);\n            }}\n          />\n        </Grid>\n      </Grid>\n    </BlogContainer>\n  );\n};\n\nconst BlogArchivePage: React.FC<RouteComponentProps<{ year: string }>> = ({\n  match,\n}) => {\n  const year = match.params.year;\n  return <BaseBlogPage year={year} key={year} heading={`Posts from ${year}`} />;\n};\n\nconst BlogCategoryPage: React.FC<RouteComponentProps<{ category: string }>> = ({\n  match,\n}) => {\n  const category = match.params.category;\n  return (\n    <BaseBlogPage\n      category={category}\n      key={category}\n      heading={`Posts in ${startCase(category)}`}\n    />\n  );\n};\n\nconst BlogSearchPage: React.FC = () => {\n  const query = new URLSearchParams(window.location.search).get(\"q\");\n  return (\n    <BaseBlogPage\n      query={query || undefined}\n      key={query}\n      heading={`Search results for \"${query}\"`}\n    />\n  );\n};\n\nconst BlogPage: React.FC = () => <BaseBlogPage key=\"base\" />;\n\nexport default BlogPage;\nexport { BlogArchivePage, BlogCategoryPage, BlogSearchPage };\n","import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  createStyles,\n  makeStyles,\n  Theme,\n  Typography,\n} from \"@material-ui/core\";\nimport Link from \"../Link\";\nimport { Recipe } from \"../../types/Cookbook\";\n\ninterface RecipePreviewProps {\n  recipe: Recipe;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      margin: theme.spacing(3),\n      marginRight: 0,\n    },\n  })\n);\n\nconst RecipePreview: React.FC<RecipePreviewProps> = (props) => {\n  const classes = useStyles();\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography variant=\"h6\">\n          <Link to={`/recipe/${props.recipe.slug}`}>{props.recipe.title}</Link>\n        </Typography>\n        <p>{props.recipe.notes}</p>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default RecipePreview;\n","import { Container, Grid, LinearProgress } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { Recipe, RecipeListResponse } from \"../../types/Cookbook\";\nimport * as api from \"../../utils/api\";\nimport { useLoader } from \"../../utils/hooks\";\nimport RecipePreview from \"./RecipePreview\";\n\nconst CookbookPage: React.FC = () => {\n  const [recipes, setRecipes] = useState<Array<Recipe>>([]);\n\n  const loadRecipes = async (): Promise<void> => {\n    const data: RecipeListResponse = await api.listRecipes();\n    setRecipes(data.results);\n  };\n\n  const { loaded } = useLoader(loadRecipes);\n\n  return !loaded ? (\n    <LinearProgress color=\"secondary\" />\n  ) : (\n    <Container>\n      <Grid container>\n        <Grid item sm={8}>\n          {recipes.map((recipe) => {\n            return <RecipePreview recipe={recipe} />;\n          })}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default CookbookPage;\n","import {\n  Card,\n  CardContent,\n  Container,\n  createStyles,\n  Grid,\n  LinearProgress,\n  makeStyles,\n  Theme,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { Recipe, RecipeDetailParams } from \"../../types/Cookbook\";\nimport * as api from \"../../utils/api\";\nimport { useLoader } from \"../../utils/hooks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      padding: theme.spacing(3),\n    },\n  })\n);\n\nconst RecipePage: React.FC<RouteComponentProps<RecipeDetailParams>> = ({\n  match,\n}) => {\n  const slug = match.params.slug;\n  const classes = useStyles();\n\n  const [recipe, setRecipe] = useState<Recipe>();\n\n  const loadRecipe = async (): Promise<void> => {\n    const thisRecipe = await api.getRecipe({ slug });\n    setRecipe(thisRecipe);\n  };\n\n  const { loaded } = useLoader(loadRecipe);\n\n  return !loaded || !recipe ? (\n    <LinearProgress color=\"secondary\" />\n  ) : (\n    <Container>\n      <div className={classes.container}>\n        <Typography variant=\"h5\">{recipe.title}</Typography>\n        <p>{recipe.notes}</p>\n        <Grid container>\n          <Grid item sm={5}>\n            <Card>\n              <CardContent>\n                <ul>\n                  {recipe.ingredients.map((ingredientAmount) => {\n                    return (\n                      <li>\n                        {ingredientAmount.ingredient.name}{\" \"}\n                        {ingredientAmount.amount}\n                      </li>\n                    );\n                  })}\n                </ul>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item sm={7}>\n            <ol>\n              {recipe.steps.map((step) => {\n                return <li>{step.text}</li>;\n              })}\n            </ol>\n          </Grid>\n        </Grid>\n      </div>\n    </Container>\n  );\n};\n\nexport default RecipePage;\n","/* eslint-disable react/no-danger */\nimport { Container, Typography } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { FishingStatsResponse } from \"../../types/Fishing\";\nimport * as api from \"../../utils/api\";\nimport { useLoader } from \"../../utils/hooks\";\n\nconst StatsPage: React.FC = () => {\n  const [graphs, setGraphs] = useState<FishingStatsResponse>();\n\n  const loadStats = async (): Promise<void> => {\n    const data = await api.getFishingStats();\n    setGraphs(data);\n  };\n\n  const { loaded } = useLoader(loadStats);\n\n  return (\n    <Container>\n      <Typography variant=\"h4\" style={{ textAlign: \"center\" }}>\n        Brown Family Fishing Trip\n      </Typography>\n      <>\n        {loaded && graphs && (\n          <>\n            <figure\n              dangerouslySetInnerHTML={{\n                __html: graphs.bar,\n              }}\n            />\n            <figure\n              dangerouslySetInnerHTML={{\n                __html: graphs.line,\n              }}\n            />\n            <figure\n              dangerouslySetInnerHTML={{\n                __html: graphs.punchcard,\n              }}\n            />\n            <figure\n              dangerouslySetInnerHTML={{\n                __html: graphs.scatter,\n              }}\n            />\n          </>\n        )}\n      </>\n    </Container>\n  );\n};\n\nexport default StatsPage;\n","import React from \"react\";\nimport { Container, Typography } from \"@material-ui/core\";\n\ninterface ErrorProps {\n  code: number;\n  message: string;\n}\n\nconst Error: React.FC<ErrorProps> = ({ code, message }) => (\n  <Container>\n    <Typography variant=\"h1\" style={{ textAlign: \"center\" }}>\n      {code}\n    </Typography>\n    <Typography variant=\"h6\" style={{ textAlign: \"center\" }}>\n      {message}\n    </Typography>\n  </Container>\n);\n\nexport const Error400: React.FC = () => (\n  <Error code={404} message=\"Bad Request\" />\n);\n\nexport const Error401: React.FC = () => (\n  <Error code={404} message=\"Unauthorized\" />\n);\n\nexport const Error403: React.FC = () => (\n  <Error code={404} message=\"Forbidden\" />\n);\n\nexport const Error404: React.FC = () => (\n  <Error code={404} message=\"Page Not Found\" />\n);\n\nexport const Error500: React.FC = () => (\n  <Error code={500} message=\"Internal Server Error\" />\n);\n","import React from \"react\";\nimport get from \"lodash.get\";\nimport { useLocation } from \"react-router-dom\";\nimport { Error400, Error401, Error403, Error404, Error500 } from \"./Error\";\n\nconst ErrorBoundary: React.FC = ({ children }) => {\n  const location = useLocation();\n\n  switch (get(location.state, \"errorStatusCode\")) {\n    case 400:\n      return <Error400 />;\n    case 401:\n      return <Error401 />;\n    case 403:\n      return <Error403 />;\n    case 404:\n      return <Error404 />;\n    case 500:\n      return <Error500 />;\n    default:\n      return <>{children}</>;\n  }\n};\n\nexport default ErrorBoundary;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport PostPage from \"./Blog/PostPage\";\nimport BlogPage, {\n  BlogArchivePage,\n  BlogCategoryPage,\n  BlogSearchPage,\n} from \"./Blog/BlogPage\";\nimport CookbookPage from \"./Cookbook/CookbookPage\";\nimport RecipePage from \"./Cookbook/RecipePage\";\nimport StatsPage from \"./Fishing/StatsPage\";\nimport ErrorBoundary from \"./Error/ErrorBoundary\";\nimport { Error404 } from \"./Error/Error\";\n\nconst Routes: React.FC = () => {\n  return (\n    <ErrorBoundary>\n      <Switch>\n        <Route\n          exact\n          path=\"/blog/:year/:month/:slug\"\n          render={(props): React.ReactNode => {\n            return <PostPage {...props} key={props.match.params.slug} />;\n          }}\n        />\n        <Route exact path=\"/blog/archive/:year\" component={BlogArchivePage} />\n        <Route exact path=\"/blog/search\" component={BlogSearchPage} />\n        <Route exact path=\"/blog/:category\" component={BlogCategoryPage} />\n        <Route exact path=\"/blog\" component={BlogPage} />\n        <Route exact path=\"/cookbook\" component={CookbookPage} />\n        <Route exact path=\"/recipe/:slug\" component={RecipePage} />\n        <Route exact path=\"/fishing\" component={StatsPage} />\n        <Route exact path=\"/\" component={BlogPage} />\n        <Route component={Error404} />\n      </Switch>\n    </ErrorBoundary>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Container from \"@material-ui/core/Container\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Link } from \"react-router-dom\";\nimport { InputBase } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\n\nconst NavBar: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\">\n      <Container>\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            className={classes.title}\n            to=\"/\"\n            component={Link}\n            color=\"inherit\"\n            style={{\n              textDecoration: \"none\",\n            }}\n          >\n            Brobin\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <form method=\"GET\" action=\"/blog/search\">\n              <InputBase\n                placeholder=\"Search…\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ \"aria-label\": \"search\", name: \"q\" }}\n              />\n            </form>\n          </div>\n          <Button color=\"inherit\" to=\"/blog\" component={Link}>\n            Blog\n          </Button>\n          <Button color=\"inherit\" href=\"https://github.com/Brobin\">\n            Projects\n          </Button>\n          <Button color=\"inherit\" to=\"/cookbook\" component={Link}>\n            Cookbook\n          </Button>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#1b1b1b\",\n    },\n    secondary: {\n      main: \"#a11919\",\n    },\n  },\n});\n\nconst Theme: React.FC = ({ children }) => {\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n};\n\nexport default Theme;\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport Footer from \"./Footer\";\nimport Routes from \"./Routes\";\nimport NavBar from \"./NavBar\";\nimport Theme from \"./Theme\";\n\nconst App: React.FC = () => (\n  <BrowserRouter>\n    <Theme>\n      <CssBaseline />\n      <NavBar />\n      <Routes />\n      <Footer />\n    </Theme>\n  </BrowserRouter>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}