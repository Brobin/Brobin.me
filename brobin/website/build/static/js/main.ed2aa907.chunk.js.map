{"version":3,"sources":["components/Footer.tsx","utils/api.ts","components/Link.tsx","components/Blog/PostLink.tsx","utils/hooks.ts","components/Blog/BlogSidebar.tsx","components/Blog/BlogContainer.tsx","components/Blog/PostPage.tsx","components/Blog/PostPreview.tsx","components/Blog/BlogPage.tsx","utils/index.ts","components/Cookbook/RecipePreview.tsx","components/Cookbook/CookbookPage.tsx","components/Cookbook/RecipePage.tsx","components/Error/Error.tsx","components/Error/ErrorBoundary.tsx","components/Routes.tsx","components/NavBar.tsx","components/Theme.tsx","components/App.tsx","serviceWorker.js","index.tsx"],"names":["useStyles","makeStyles","theme","footer","width","color","palette","grey","A100","backgroundColor","primary","main","padding","spacing","marginTop","icon","paddingRight","float","Footer","classes","Box","component","className","Container","Grid","container","item","sm","Typography","variant","dayjs","format","style","href","baseUrl","window","location","origin","api","params","category","this","get","page","year","query","month","slug","route","requestOptions","url","method","headers","body","JSON","stringify","request","response","parse","parseJson","Link","props","to","RouterLink","children","PostLink","post","date","created","title","useLoader","loadFunction","history","useHistory","useState","loaded","setLoaded","loading","setLoading","load","useCallback","a","replace","pathname","errorStatusCode","statusCode","useEffect","YearBadge","withStyles","createStyles","badge","right","top","border","background","paper","Badge","card","margin","marginLeft","BlogSidebar","recentPosts","setRecentPosts","categories","setCategories","archiveYears","setArchiveYears","getBlogSidebar","data","recent","archive","Card","CardContent","map","key","id","index","badgeContent","posts","BlogContainer","marginRight","hr","borderBottom","PostPage","match","setPost","getPost","_post","postContent","document","getElementById","innerHTML","content","addScript","createElement","setAttribute","appendChild","PostPreview","preview","heading","BaseBlogPage","setPosts","count","setCount","setPage","loadBlogPosts","listPosts","results","Math","ceil","direction","alignItems","justify","xs","Pagination","onChange","event","LinearProgress","BlogArchivePage","BlogCategoryPage","str","toUpperCase","BlogSearchPage","URLSearchParams","search","undefined","BlogPage","RecipePreview","recipe","notes","CookbookPage","recipes","setRecipes","listRecipes","RecipePage","setRecipe","getRecipe","_recipe","ingredients","ingredientAmount","ingredient","name","amount","steps","step","text","Error","code","message","textAlign","Error400","Error401","Error403","Error404","Error500","ErrorBoundary","useLocation","state","Routes","exact","path","render","flexGrow","position","borderRadius","shape","fade","common","white","breakpoints","up","searchIcon","height","pointerEvents","display","justifyContent","inputRoot","inputInput","paddingLeft","transition","transitions","create","NavBar","AppBar","Toolbar","textDecoration","action","InputBase","placeholder","root","input","inputProps","Button","createMuiTheme","secondary","Theme","ThemeProvider","App","CssBaseline","Boolean","hostname","ReactDOM","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.ed2aa907.chunk.js","sourcesContent":["import React from \"react\";\nimport dayjs from \"dayjs\";\nimport {\n  Box,\n  Container,\n  Grid,\n  Link,\n  makeStyles,\n  Theme,\n  Typography,\n} from \"@material-ui/core\";\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\nimport FacebookIcon from \"@material-ui/icons/Facebook\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport TwitterIcon from \"@material-ui/icons/Twitter\";\n\nconst useStyles = makeStyles((theme: Theme) => ({\n  footer: {\n    width: \"100%\",\n    color: theme.palette.grey.A100,\n    backgroundColor: theme.palette.primary.main,\n    padding: theme.spacing(3),\n    marginTop: theme.spacing(3),\n  },\n  icon: {\n    color: theme.palette.grey.A100,\n    paddingRight: \"10px\",\n    float: \"right\",\n  },\n}));\n\nconst Footer: React.FC = () => {\n  const classes = useStyles();\n  return (\n    <Box component=\"div\" className={classes.footer}>\n      <Container>\n        <Grid container>\n          <Grid item sm={6}>\n            <Typography variant=\"caption\">\n              &copy; 2013-{dayjs().format(\"YYYY\")} Tobin Brown\n            </Typography>\n          </Grid>\n          <Grid item sm={6} style={{ float: \"right\" }}>\n            <Link\n              href=\"https://www.linkedin.com/pub/tobin-brown/91/393/720\"\n              className={classes.icon}\n            >\n              <LinkedInIcon />\n            </Link>\n            <Link\n              href=\"https://www.facebook.com/tobinjbrown\"\n              className={classes.icon}\n            >\n              <FacebookIcon />\n            </Link>\n            <Link\n              href=\"https://twitter.com/RobinWithaT\"\n              className={classes.icon}\n            >\n              <TwitterIcon />\n            </Link>\n            <Link href=\"https://github.com/Brobin\" className={classes.icon}>\n              <GitHubIcon />\n            </Link>\n          </Grid>\n        </Grid>\n      </Container>\n    </Box>\n  );\n};\n\nexport default Footer;\n","import request from \"request-promise-native\";\nimport {\n  BlogPost,\n  BlogPostDetailParams,\n  BlogPostListParams,\n  BlogPostListResponse,\n  BlogSidebarResponse,\n} from \"../types/Blog\";\nimport {\n  Recipe,\n  RecipeListResponse,\n  RecipeDetailParams,\n} from \"../types/Cookbook\";\n\nconst baseUrl =\n  process.env.NODE_ENV === \"production\"\n    ? `${window.location.origin}/api`\n    : \"http://127.0.0.1:8000/api\";\n\ninterface ApiInterface {\n  listPosts: (params: BlogPostListParams) => Promise<BlogPostListResponse>;\n  getPost: (params: BlogPostDetailParams) => Promise<BlogPost>;\n  getBlogSidebar: () => Promise<BlogSidebarResponse>;\n  listRecipes: () => Promise<RecipeListResponse>;\n  getRecipe: (arams: RecipeDetailParams) => Promise<Recipe>;\n}\n\nclass Api implements ApiInterface {\n  async listPosts(params: BlogPostListParams): Promise<BlogPostListResponse> {\n    if (params.category) {\n      return this.get(`/blog/${params.category}?page=${params.page}`);\n    } else if (params.year) {\n      return this.get(`/blog/archive/${params.year}`);\n    } else if (params.query) {\n      return this.get(`/blog/search?page${params.page}&query=${params.query}`);\n    }\n    return this.get(`/blog/?page=${params.page}`);\n  }\n\n  async getPost(params: BlogPostDetailParams): Promise<BlogPost> {\n    return this.get(`/blog/${params.year}/${params.month}/${params.slug}`);\n  }\n\n  async getBlogSidebar(): Promise<BlogSidebarResponse> {\n    return this.get(\"/blog/sidebar\");\n  }\n\n  async listRecipes(): Promise<RecipeListResponse> {\n    return this.get(`/cookbook/`);\n  }\n\n  async getRecipe(params: RecipeDetailParams): Promise<Recipe> {\n    return this.get(`/cookbook/${params.slug}`);\n  }\n\n  async post(route: string, params = {}) {\n    const requestOptions = {\n      url: `${baseUrl}${route}`,\n      method: \"POST\",\n      headers: { \"Content-Type\": \"application/json\" },\n      body: JSON.stringify(params),\n    };\n    const response = await request(requestOptions);\n    return JSON.parse(response);\n  }\n\n  async get(route: string, parseJson = true) {\n    const requestOptions = {\n      url: `${baseUrl}${route}`,\n      method: \"GET\",\n      headers: { \"Content-Type\": \"application/json\" },\n    };\n    const response = await request(requestOptions);\n    if (parseJson) {\n      return JSON.parse(response);\n    }\n    return response;\n  }\n}\n\nconst api = new Api();\n\nexport default api;\n","import React from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport { Link as MuiLink } from \"@material-ui/core\";\n\ninterface LinkProps {\n  to: string;\n  children: React.ReactNode;\n}\n\nconst Link: React.FC<LinkProps> = (props) => (\n  <MuiLink color=\"secondary\" to={props.to} component={RouterLink}>\n    {props.children}\n  </MuiLink>\n);\n\nexport default Link;\n","import React from \"react\";\nimport dayjs from \"dayjs\";\nimport Link from \"../Link\";\nimport { BlogPost } from \"../../types/Blog\";\n\ninterface PostLinkProps {\n  post: BlogPost;\n}\n\nconst PostLink: React.FC<PostLinkProps> = (props) => {\n  const post = props.post;\n  const date = dayjs(post.created);\n\n  return (\n    <Link to={`/blog/${date.format(\"YYYY/MM\")}/${post.slug}`}>\n      {post.title}\n    </Link>\n  );\n};\n\nexport default PostLink;\n","import {\n  Dispatch,\n  SetStateAction,\n  useCallback,\n  useEffect,\n  useState,\n} from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\ninterface IUseLoader {\n  loaded: boolean;\n  setLoaded: Dispatch<SetStateAction<boolean>>;\n  loading: boolean;\n  setLoading: Dispatch<SetStateAction<boolean>>;\n}\n\nexport const useLoader = (loadFunction: Function): IUseLoader => {\n  const history = useHistory();\n  /**\n   * useState implementation that takes an async function and tells\n   * you when its running (loading) and complete (loaded). Defaults\n   * to not loaded, so when it is used, it will automatically get\n   * called to load.\n   */\n  const [loaded, setLoaded] = useState<boolean>(false);\n  const [loading, setLoading] = useState<boolean>(false);\n\n  const load = useCallback(async () => {\n    try {\n      setLoading(true);\n      await loadFunction();\n      setLoaded(true);\n      setLoading(false);\n    } catch (err) {\n      history.replace(history.location.pathname, {\n        errorStatusCode: err.statusCode || 500,\n      });\n    }\n  }, [loadFunction, history]);\n\n  useEffect(() => {\n    // Use dual booleans in case the loadFunction takes a long time.\n    // We don't want to double call APIs and whatnot\n    if (!loaded && !loading) {\n      load();\n    }\n  }, [loaded, loading, load]);\n\n  return { loaded, setLoaded, loading, setLoading };\n};\n","import React, { useState } from \"react\";\nimport {\n  Badge,\n  Card,\n  CardContent,\n  createStyles,\n  makeStyles,\n  Theme,\n  Typography,\n  withStyles,\n} from \"@material-ui/core\";\nimport {\n  BlogArchive,\n  BlogCategory,\n  BlogPost,\n  BlogSidebarResponse,\n} from \"../../types/Blog\";\nimport api from \"../../utils/api\";\nimport PostLink from \"./PostLink\";\nimport Link from \"../Link\";\nimport { useLoader } from \"../../utils/hooks\";\n\nconst YearBadge = withStyles((theme: Theme) =>\n  createStyles({\n    badge: {\n      right: -15,\n      top: 10,\n      border: `2px solid ${theme.palette.background.paper}`,\n      padding: \"0 4px\",\n    },\n  })\n)(Badge);\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      margin: theme.spacing(3),\n      marginLeft: 0,\n    },\n  })\n);\n\nconst BlogSidebar: React.FC = () => {\n  const classes = useStyles();\n\n  const [recentPosts, setRecentPosts] = useState<Array<BlogPost>>([]);\n  const [categories, setCategories] = useState<Array<BlogCategory>>([]);\n  const [archiveYears, setArchiveYears] = useState<Array<BlogArchive>>([]);\n\n  const loadSidebar = async () => {\n    const data: BlogSidebarResponse = await api.getBlogSidebar();\n    setRecentPosts(data.recent);\n    setCategories(data.categories);\n    setArchiveYears(data.archive);\n  };\n\n  const { loaded } = useLoader(loadSidebar);\n\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography variant=\"h6\">Recent Posts</Typography>\n        {loaded &&\n          recentPosts.map((post) => {\n            return (\n              <p key={post.id}>\n                <PostLink post={post} />\n              </p>\n            );\n          })}\n        <Typography variant=\"h6\">Categories</Typography>\n        <p>\n          {loaded &&\n            categories.map((category, index) => {\n              return (\n                <span key={category.slug}>\n                  {index > 0 ? \", \" : \"\"}\n                  <Link to={`/blog/${category.slug}`}>{category.title}</Link>\n                </span>\n              );\n            })}\n        </p>\n        <Typography variant=\"h6\">Archive</Typography>\n        {loaded &&\n          archiveYears.map((year) => {\n            return (\n              <div key={year.year}>\n                <Link to={`/blog/archive/${year.year}`}>\n                  <YearBadge badgeContent={year.posts} color=\"primary\">\n                    <span color=\"secondary\">{year.year}</span>\n                  </YearBadge>\n                </Link>\n                <br />\n              </div>\n            );\n          })}\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default BlogSidebar;\n","import React from \"react\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport BlogSidebar from \"./BlogSidebar\";\n\nconst BlogContainer: React.FC = ({ children }) => (\n  <Container>\n    <Grid container spacing={3}>\n      <Grid item sm={8}>\n        {children}\n      </Grid>\n      <Grid item sm={4}>\n        <BlogSidebar />\n      </Grid>\n    </Grid>\n  </Container>\n);\n\nexport default BlogContainer;\n","import React, { useState } from \"react\";\nimport dayjs from \"dayjs\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport BlogContainer from \"./BlogContainer\";\nimport { BlogPost, BlogPostDetailParams } from \"../../types/Blog\";\nimport api from \"../../utils/api\";\nimport { useLoader } from \"../../utils/hooks\";\nimport {\n  Card,\n  CardContent,\n  createStyles,\n  makeStyles,\n  Theme,\n  Typography,\n} from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      margin: theme.spacing(3),\n      marginRight: 0,\n    },\n    hr: {\n      border: \"none\",\n      borderBottom: \"1px solid #888\",\n    },\n  })\n);\n\nconst PostPage: React.FC<RouteComponentProps<BlogPostDetailParams>> = ({\n  match,\n}) => {\n  const classes = useStyles();\n  const [post, setPost] = useState<BlogPost>();\n\n  const loadPost = async () => {\n    const _post: BlogPost = await api.getPost(match.params);\n    setPost(_post);\n\n    // Yes, this is all quite janky, but we have to do this in\n    // order to run the code prettifier on the blog posts.\n    var postContent = document.getElementById(\"post-content\");\n    if (postContent && _post) {\n      postContent.innerHTML = _post.content;\n\n      var addScript = document.createElement(\"script\");\n      addScript.setAttribute(\n        \"src\",\n        \"//cdnjs.cloudflare.com/ajax/libs/prettify/r298/run_prettify.min.js\"\n      );\n      document.body.appendChild(addScript);\n    }\n  };\n\n  const { loaded } = useLoader(loadPost);\n\n  return (\n    <BlogContainer>\n      <Card className={classes.card}>\n        <CardContent>\n          {loaded && post && (\n            <>\n              <Typography variant=\"h5\">{post.title}</Typography>\n              <p>{dayjs(post.created).format(\"MMMM D, YYYY\")}</p>\n              <hr className={classes.hr} />\n            </>\n          )}\n          <span id=\"post-content\" />\n        </CardContent>\n      </Card>\n    </BlogContainer>\n  );\n};\n\nexport default PostPage;\n","import React from \"react\";\nimport dayjs from \"dayjs\";\nimport {\n  Card,\n  CardContent,\n  createStyles,\n  makeStyles,\n  Theme,\n  Typography,\n} from \"@material-ui/core\";\nimport { BlogPost } from \"../../types/Blog\";\nimport PostLink from \"./PostLink\";\n\ninterface PostPreviewProps {\n  post: BlogPost;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      margin: theme.spacing(3),\n      marginRight: 0,\n    },\n  })\n);\n\nconst PostPreview: React.FC<PostPreviewProps> = (props) => {\n  const classes = useStyles();\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography variant=\"h6\">\n          <PostLink post={props.post} />\n        </Typography>\n        <Typography variant=\"body1\">\n          {dayjs(props.post.created).format(\"MMMM D, YYYY h:mm A\")}\n        </Typography>\n        <Typography variant=\"body2\">{props.post.preview}</Typography>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default PostPreview;\n","import React, { useCallback, useState } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport {\n  createStyles,\n  Grid,\n  LinearProgress,\n  makeStyles,\n  Theme,\n  Typography,\n} from \"@material-ui/core\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport BlogContainer from \"./BlogContainer\";\nimport PostPreview from \"./PostPreview\";\nimport { BlogPostListResponse, BlogPost } from \"../../types/Blog\";\nimport { useLoader } from \"../../utils/hooks\";\nimport api from \"../../utils/api\";\nimport { startCase } from \"../../utils\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    heading: {\n      margin: theme.spacing(3),\n    },\n  })\n);\n\ntype BlogPageProps = {\n  heading?: string;\n  query?: string;\n  year?: string;\n  category?: string;\n};\n\nconst BaseBlogPage: React.FC<BlogPageProps> = (props) => {\n  const classes = useStyles();\n  const query = props.query;\n  const year = props.year;\n  const category = props.category;\n\n  const [posts, setPosts] = useState<Array<BlogPost>>([]);\n  const [count, setCount] = useState<number>();\n  const [page, setPage] = useState<number>(1);\n\n  const loadBlogPosts = useCallback(async () => {\n    const data: BlogPostListResponse = await api.listPosts({\n      page,\n      query,\n      year,\n      category,\n    });\n    setPosts(data.results);\n    setCount(Math.ceil(data.count / 10));\n  }, [page, query, year, category]);\n\n  const { loaded, setLoaded } = useLoader(loadBlogPosts);\n\n  return !loaded ? (\n    <LinearProgress color=\"secondary\" />\n  ) : (\n    <BlogContainer>\n      {props.heading && (\n        <Typography variant=\"h5\" className={classes.heading}>\n          {props.heading}\n        </Typography>\n      )}\n      {posts.map((post, index) => {\n        return <PostPreview key={post.id} post={post} />;\n      })}\n\n      <Grid\n        container\n        spacing={0}\n        direction=\"column\"\n        alignItems=\"center\"\n        justify=\"center\"\n      >\n        <Grid item xs={12}>\n          <Pagination\n            count={count}\n            page={page}\n            onChange={(event, page: number) => {\n              setPage(page);\n              setLoaded(false);\n            }}\n          />\n        </Grid>\n      </Grid>\n    </BlogContainer>\n  );\n};\n\nconst BlogArchivePage: React.FC<RouteComponentProps<{ year: string }>> = ({\n  match,\n}) => {\n  const year = match.params.year;\n  return <BaseBlogPage year={year} key={year} heading={`Posts from ${year}`} />;\n};\n\nconst BlogCategoryPage: React.FC<RouteComponentProps<{ category: string }>> = ({\n  match,\n}) => {\n  const category = match.params.category;\n  return (\n    <BaseBlogPage\n      category={category}\n      key={category}\n      heading={`Posts in ${startCase(category)}`}\n    />\n  );\n};\n\nconst BlogSearchPage: React.FC = () => {\n  const query = new URLSearchParams(window.location.search).get(\"q\");\n  return (\n    <BaseBlogPage\n      query={query || undefined}\n      key={query}\n      heading={`Search results for \"${query}\"`}\n    />\n  );\n};\n\nconst BlogPage: React.FC = () => <BaseBlogPage key={\"base\"} />;\n\nexport default BlogPage;\nexport { BlogArchivePage, BlogCategoryPage, BlogSearchPage };\n","export const startCase = (str: string) =>\n  str\n    .replace(\"-\", \" \")\n    .replace(/(?:^|\\s|[\"'([{])+\\S/g, (match) => match.toUpperCase());\n","import React from \"react\";\nimport {\n  Card,\n  CardContent,\n  createStyles,\n  makeStyles,\n  Theme,\n  Typography,\n} from \"@material-ui/core\";\nimport Link from \"../Link\";\nimport { Recipe } from \"../../types/Cookbook\";\n\ninterface RecipePreviewProps {\n  recipe: Recipe;\n}\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    card: {\n      margin: theme.spacing(3),\n      marginRight: 0,\n    },\n  })\n);\n\nconst RecipePreview: React.FC<RecipePreviewProps> = (props) => {\n  const classes = useStyles();\n  return (\n    <Card className={classes.card}>\n      <CardContent>\n        <Typography variant=\"h6\">\n          <Link to={`/recipe/${props.recipe.slug}`}>{props.recipe.title}</Link>\n        </Typography>\n        <p>{props.recipe.notes}</p>\n      </CardContent>\n    </Card>\n  );\n};\n\nexport default RecipePreview;\n","import { Container, Grid, LinearProgress } from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { Recipe, RecipeListResponse } from \"../../types/Cookbook\";\nimport api from \"../../utils/api\";\nimport { useLoader } from \"../../utils/hooks\";\nimport RecipePreview from \"./RecipePreview\";\n\nconst CookbookPage: React.FC = () => {\n  const [recipes, setRecipes] = useState<Array<Recipe>>([]);\n\n  const loadRecipes = async () => {\n    const data: RecipeListResponse = await api.listRecipes();\n    setRecipes(data.results);\n  };\n\n  const { loaded } = useLoader(loadRecipes);\n\n  return !loaded ? (\n    <LinearProgress color=\"secondary\" />\n  ) : (\n    <Container>\n      <Grid container>\n        <Grid item sm={8}>\n          {recipes.map((recipe) => {\n            return <RecipePreview recipe={recipe} />;\n          })}\n        </Grid>\n      </Grid>\n    </Container>\n  );\n};\n\nexport default CookbookPage;\n","import {\n  Card,\n  CardContent,\n  Container,\n  createStyles,\n  Grid,\n  LinearProgress,\n  makeStyles,\n  Theme,\n  Typography,\n} from \"@material-ui/core\";\nimport React, { useState } from \"react\";\nimport { RouteComponentProps } from \"react-router-dom\";\nimport { Recipe, RecipeDetailParams } from \"../../types/Cookbook\";\nimport api from \"../../utils/api\";\nimport { useLoader } from \"../../utils/hooks\";\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    container: {\n      padding: theme.spacing(3),\n    },\n  })\n);\n\nconst RecipePage: React.FC<RouteComponentProps<RecipeDetailParams>> = ({\n  match,\n}) => {\n  const slug = match.params.slug;\n  const classes = useStyles();\n\n  const [recipe, setRecipe] = useState<Recipe>();\n\n  const loadRecipe = async () => {\n    const _recipe = await api.getRecipe({ slug });\n    setRecipe(_recipe);\n  };\n\n  const { loaded } = useLoader(loadRecipe);\n\n  return !loaded || !recipe ? (\n    <LinearProgress color=\"secondary\" />\n  ) : (\n    <Container>\n      <div className={classes.container}>\n        <Typography variant=\"h5\">{recipe.title}</Typography>\n        <p>{recipe.notes}</p>\n        <Grid container>\n          <Grid item sm={5}>\n            <Card>\n              <CardContent>\n                <ul>\n                  {recipe.ingredients.map((ingredientAmount) => {\n                    return (\n                      <li>\n                        {ingredientAmount.ingredient.name}{\" \"}\n                        {ingredientAmount.amount}\n                      </li>\n                    );\n                  })}\n                </ul>\n              </CardContent>\n            </Card>\n          </Grid>\n          <Grid item sm={7}>\n            <ol>\n              {recipe.steps.map((step) => {\n                return <li>{step.text}</li>;\n              })}\n            </ol>\n          </Grid>\n        </Grid>\n      </div>\n    </Container>\n  );\n};\n\nexport default RecipePage;\n","import React from \"react\";\nimport { Container, Typography } from \"@material-ui/core\";\n\ninterface ErrorProps {\n  code: number;\n  message: string;\n}\n\nconst Error: React.FC<ErrorProps> = ({ code, message }) => (\n  <Container>\n    <Typography variant=\"h1\" style={{ textAlign: \"center\" }}>\n      {code}\n    </Typography>\n    <Typography variant=\"h6\" style={{ textAlign: \"center\" }}>\n      {message}\n    </Typography>\n  </Container>\n);\n\nexport const Error400: React.FC = () => (\n  <Error code={404} message={\"Bad Request\"} />\n);\n\nexport const Error401: React.FC = () => (\n  <Error code={404} message={\"Unauthorized\"} />\n);\n\nexport const Error403: React.FC = () => (\n  <Error code={404} message={\"Forbidden\"} />\n);\n\nexport const Error404: React.FC = () => (\n  <Error code={404} message={\"Page Not Found\"} />\n);\n\nexport const Error500: React.FC = () => (\n  <Error code={500} message={\"Internal Server Error\"} />\n);\n","import React from \"react\";\nimport get from \"lodash.get\";\nimport { useLocation } from \"react-router-dom\";\nimport { Error400, Error401, Error403, Error404, Error500 } from \"./Error\";\n\nconst ErrorBoundary: React.FC = ({ children }) => {\n  const location = useLocation();\n\n  switch (get(location.state, \"errorStatusCode\")) {\n    case 400:\n      return <Error400 />;\n    case 401:\n      return <Error401 />;\n    case 403:\n      return <Error403 />;\n    case 404:\n      return <Error404 />;\n    case 500:\n      return <Error500 />;\n    default:\n      return <>{children}</>;\n  }\n};\n\nexport default ErrorBoundary;\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport PostPage from \"./Blog/PostPage\";\nimport BlogPage, {\n  BlogArchivePage,\n  BlogCategoryPage,\n  BlogSearchPage,\n} from \"./Blog/BlogPage\";\nimport CookbookPage from \"./Cookbook/CookbookPage\";\nimport RecipePage from \"./Cookbook/RecipePage\";\nimport ErrorBoundary from \"./Error/ErrorBoundary\";\nimport { Error404 } from \"./Error/Error\";\n\nconst Routes: React.FC = () => {\n  return (\n    <ErrorBoundary>\n      <Switch>\n        <Route\n          exact\n          path=\"/blog/:year/:month/:slug\"\n          render={(props) => {\n            return <PostPage {...props} key={props.match.params.slug} />;\n          }}\n        />\n        <Route exact path=\"/blog/archive/:year\" component={BlogArchivePage} />\n        <Route exact path=\"/blog/search\" component={BlogSearchPage} />\n        <Route exact path=\"/blog/:category\" component={BlogCategoryPage} />\n        <Route exact path=\"/blog\" component={BlogPage} />\n        <Route exact path=\"/cookbook\" component={CookbookPage} />\n        <Route exact path=\"/recipe/:slug\" component={RecipePage} />\n        <Route exact path=\"/\" component={BlogPage} />\n        <Route component={Error404} />\n      </Switch>\n    </ErrorBoundary>\n  );\n};\n\nexport default Routes;\n","import React from \"react\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Container from \"@material-ui/core/Container\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Button from \"@material-ui/core/Button\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport { Link } from \"react-router-dom\";\nimport { InputBase } from \"@material-ui/core\";\n\nconst useStyles = makeStyles((theme) => ({\n  title: {\n    flexGrow: 1,\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n}));\n\nconst NavBar: React.FC = () => {\n  const classes = useStyles();\n\n  return (\n    <AppBar position=\"static\">\n      <Container>\n        <Toolbar>\n          <Typography\n            variant=\"h6\"\n            className={classes.title}\n            to=\"/\"\n            component={Link}\n            color=\"inherit\"\n            style={{\n              textDecoration: \"none\",\n            }}\n          >\n            Brobin\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <form method=\"GET\" action=\"/blog/search\">\n              <InputBase\n                placeholder=\"Search…\"\n                classes={{\n                  root: classes.inputRoot,\n                  input: classes.inputInput,\n                }}\n                inputProps={{ \"aria-label\": \"search\", name: \"q\" }}\n              />\n            </form>\n          </div>\n          <Button color=\"inherit\" to=\"/blog\" component={Link}>\n            Blog\n          </Button>\n          <Button color=\"inherit\" href=\"https://github.com/Brobin\">\n            Projects\n          </Button>\n          <Button color=\"inherit\" to=\"/cookbook\" component={Link}>\n            Cookbook\n          </Button>\n        </Toolbar>\n      </Container>\n    </AppBar>\n  );\n};\n\nexport default NavBar;\n","import React from \"react\";\nimport { ThemeProvider, createMuiTheme } from \"@material-ui/core\";\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      main: \"#1b1b1b\",\n    },\n    secondary: {\n      main: \"#a11919\",\n    },\n  },\n});\n\nconst Theme: React.FC = ({ children }) => {\n  return <ThemeProvider theme={theme}>{children}</ThemeProvider>;\n};\n\nexport default Theme;\n","import React from \"react\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { CssBaseline } from \"@material-ui/core\";\nimport Footer from \"./Footer\";\nimport Routes from \"./Routes\";\nimport NavBar from \"./NavBar\";\nimport Theme from \"./Theme\";\n\nconst App: React.FC = () => (\n  <BrowserRouter>\n    <Theme>\n      <CssBaseline />\n      <NavBar />\n      <Routes />\n      <Footer />\n    </Theme>\n  </BrowserRouter>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}